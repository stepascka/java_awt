package farmes;
import java.awt.*; 
import java.util.ArrayList;
import java.util.List;
import java.awt.event.*; 

class TwoFrames extends Frame { 
	
	int ch = 0; //кол-во фигур
	int maxNumberOfObjects = 10;
	int numbers[];	//id	
	
	List<Figure> figures = new ArrayList<Figure>(); //список фигур
	
	Frame childFrame ; // Дочерняя форма
	Canvas cnv;
	Label numberLab, objectLab, speedLab, objectLabForChange, speedLabForChange, colorLab;
	TextField numberTB, speedTB, colorTB; 
	Button addBut, changeBut;  
	Choice objectChForAdd, objectChForChange, speedCh;
	Color color; 
	
	
	public TwoFrames() {  
		
		setTitle("Лабораторная работа 6 (Мусин)");  
		setSize (270, 320); 
		
		numbers = new int[maxNumberOfObjects];
		for (int i = 0; i < maxNumberOfObjects; i ++) 
			numbers[i] = -1;	
				
		
		numberLab = new Label("Номер: ");
		objectLab = new Label("Объект: ");
		speedLab = new Label("Скорость: ");
		objectLabForChange = new Label("Объект: ");
		speedLabForChange = new Label("Скорость: ");
		colorLab = new Label("Цвет: ");
		
		numberTB = new TextField();
		numberTB.setText("1");
		speedTB = new TextField();
		speedTB.setText("3");
		colorTB = new TextField();
		colorTB.setText("красный");
		
		addBut = new Button("Добавить");
		changeBut = new Button("Изменить");
		
		objectChForAdd = new Choice();  
		objectChForAdd.addItem("Круг");  
		objectChForAdd.addItem("Квадрат");  
		
		objectChForChange = new Choice();  
		
		speedCh = new Choice(); 
		speedCh.addItem("1");  
		speedCh.addItem("2");   
		speedCh.addItem("3"); 
		speedCh.addItem("4");  
		speedCh.addItem("5");  		
		
		addBut.addActionListener(new ActionListener() {   
			public void actionPerformed (ActionEvent aE) {    
				AddButFunc();   
			}  
		});  
		
		changeBut.addActionListener(new ActionListener() {   
			public void actionPerformed (ActionEvent aE) {    
				ChangeButFunc();   
			}  
		});  

		this.addWindowListener (
				new WindowAdapter() {   
					public void windowClosing (WindowEvent wE) {   
						System.exit(0);   
					}  
				}
		); 
		
		cnv = new Canvas() {
			public void paint(Graphics g) {
				//g.setColor(colors[n]);  
				//g.fillOval(point.x, point.y, 5, 5);
		    }
		};
		cnv.setBackground(Color.pink);
		
		//интерфейс УО		
		
		GridBagConstraints gbc = new GridBagConstraints();
		this.setLayout (new GridBagLayout());  
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 0;
		this.add (numberLab, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 1; gbc.gridy = 0;
        this.add (numberTB, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 1;
        this.add (objectLab, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 1; gbc.gridy = 1;
        this.add (objectChForAdd, gbc);
        
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 2;
        this.add (colorLab, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 1; gbc.gridy = 2;
        this.add (colorTB, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 3;
        this.add (speedLab, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 1; gbc.gridy = 3;
        this.add (speedTB, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0;  gbc.gridy = 4;
        gbc.gridwidth = 2;
        this.add (addBut, gbc);
				
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridy = 5;
        gbc.gridwidth = 1;
        this.add (new Label(""), gbc);

		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 6;
        this.add (objectLabForChange, gbc);
		
		for (int i = 0; i < ch; i++) {			
			objectChForChange.addItem(numbers[i] + ""); 
		}
				
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 1; gbc.gridy = 6;
        this.add (objectChForChange, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 7;
        this.add (speedLabForChange, gbc);
				
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 1; gbc.gridy = 7;
        this.add (speedCh, gbc);
		
		gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0; gbc.gridy = 8;
        gbc.gridwidth = 2;
        this.add (changeBut, gbc);
		
		//ДО
		childFrame= new Frame(); // Создать дочернюю форму и  
		childFrame.setSize (600, 600); // с размером  
		childFrame.setLocation (350, 0);  
		
		childFrame.add(cnv);
		
		childFrame.show(); // Перерисовать область клиента окна 
	} 
	
	public void AddButFunc() {			
		
		if (IsInteger(numberTB.getText())) {	//проверка номера
			int num = Integer.parseInt(numberTB.getText());
			if (CheckNumbers(num)) {
				if (IsInteger(speedTB.getText())) { //проверка скорости
					int speed = Integer.parseInt(speedTB.getText());
					if (CheckSpeed(speed)) {
						if (CheckColor(colorTB.getText())) { //проверка цвета
							
							ch ++;
							numbers[ch] = num;
							
							if (objectChForAdd.getSelectedItem() == "Круг") {
								figures.add(new Circle(this.cnv, color, speed));
								figures.get(ch-1).start();
							}
							else {
								figures.add(new Quadrangle(this.cnv, color, speed));
								figures.get(ch-1).start();	
							}
						}
					} 
				}
			}
		}
	}
	
	public void ChangeButFunc() {
		//
	}
	
	public boolean IsInteger(String string) {
		try {
			Integer.parseInt(string);
		}
		catch (Exception e) {
			return false;
		}
		return true;
	}
	
	public boolean CheckNumbers(int num) {		
		for (int i = 0; i < ch; i ++) {
			if (numbers[i] == num) 
				return false;
		}
		return true;
	}
	
	public boolean CheckSpeed(int speed) {		
		if ((speed == 1) || (speed == 2) || (speed == 3) || (speed == 4) || (speed == 5))
			return true;
		else 
			return false;
	}
	
	public boolean CheckColor(String clr) {		
		if (clr == "красный") {
			this.color = Color.red;
		}
		else if (clr == "зеленый") {
			this.color = Color.green;
		}
		else if (clr == "синий") {
			this.color = Color.blue;
		}
		else if (clr == "желтый") {
			this.color = Color.yellow;
		}
		else if (clr == "белый") {
			this.color = Color.white;
		}
		else if (clr == "черный") {
			this.color = Color.black;
		}
		else 
			return false;
		
		return true;
	}

	public static void main (String[] args) {  
		TwoFrames TF = new TwoFrames();  
		TF.show(); 
	}
}